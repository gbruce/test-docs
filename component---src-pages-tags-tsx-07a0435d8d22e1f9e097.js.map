{"version":3,"sources":["webpack:///./src/pages/tags.tsx","webpack:///./src/components/Header.tsx","webpack:///./src/components/Layout.tsx"],"names":["TagsPage","props","allMdx","data","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","a","title","group","map","tag","key","fieldValue","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","kebabCase","totalCount","pageQuery","style","container","name","styles","wrapper","TitleLink","styled_base_browser_esm","Link","target","Header","_ref","core_browser_esm","css","Content","SideBar","Layout","children","gatsby_browser_entry","query","render","react_default","Fragment","Helmet","titleTemplate","site","siteMetadata","defaultTitle","meta","content","Header_Header","activeClassName","_1242692094"],"mappings":"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","file":"component---src-pages-tags-tsx-07a0435d8d22e1f9e097.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Helmet from 'react-helmet'\nimport { kebabCase } from 'lodash'\nimport { Layout } from '../components/Layout'\n\ninterface TagsPageProps {\n  readonly data: {\n    readonly allMdx: AllMarkdown & {\n      readonly group: readonly {\n        readonly fieldValue: string\n        readonly totalCount: number\n      }[]\n    }\n    readonly site: Site\n  }\n}\n\nconst TagsPage = (props: TagsPageProps) => {\n  const { allMdx } = props.data\n\n  return (\n    <Layout>\n      <Helmet title=\"Tags\" />\n      <div>\n        <h2>Tags</h2>\n        <ul>\n          {allMdx.group.map(tag => (\n            <li key={tag.fieldValue}>\n              <Link to={`/tags/${kebabCase(tag.fieldValue)}/`}>{tag.fieldValue}</Link> (\n              {tag.totalCount})\n            </li>\n          ))}\n        </ul>\n      </div>\n    </Layout>\n  )\n}\n\nexport default TagsPage\n\nexport const pageQuery = graphql`\n  {\n    allMdx(limit: 2000, filter: { frontmatter: { draft: { ne: true } } }) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { css } from '@emotion/core'\nimport { Link } from 'gatsby'\n\nconst style = {\n  container: css`\n    background: #ffffff;\n    margin-bottom: 1.45rem;\n  `,\n  wrapper: css`\n    display: grid;\n    grid-template-columns: auto 10rem;\n    grid-template-rows: auto;\n    margin: 0 auto;\n    max-width: 960px;\n    padding: 1.45rem 1.0875rem;\n  `,\n  title: css`\n    color: '#ff0000';\n    margin: 0;\n    display: inline-block;\n  `\n}\n\nconst TitleLink = styled(Link)`\n  color: #000000;\n\n  &:active,\n  &:hover {\n    color: #fff;\n  }\n`\n\ninterface HeaderProps {\n  readonly title: string\n}\n\nexport const Header = ({ title }: HeaderProps) => (\n  <div css={style.container}>\n    <div css={style.wrapper}>\n      <h1 css={style.title}>\n        <TitleLink to=\"/\">{title}</TitleLink>\n      </h1>\n    </div>\n  </div>\n)\n","import React from 'react'\nimport { StaticQuery, graphql, Link } from 'gatsby'\nimport { Helmet } from 'react-helmet'\nimport { css } from '@emotion/core'\nimport { Header } from './Header'\n\nconst Content = css`\n  margin-left: 160px; /* Same as the width of the sidebar */\n  padding: 0px 10px;\n`\nexport const SideBar = css`\n  font-family: 'sans serif';\n  font-size: 20px;\n  height: 100%;\n  width: 160px;\n  position: fixed;\n  left: 0;\n  overflow-x: hidden;\n  padding-left: 10px;\n`\ninterface LayoutProps {\n  readonly children?: React.ReactNode | readonly React.ReactNode[]\n}\n\ninterface RenderData {\n  readonly site: {\n    readonly siteMetadata: {\n      readonly title: string\n    }\n  }\n}\n\nexport const Layout = ({ children }: LayoutProps) => (\n  <StaticQuery\n    query={graphql`\n      {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={(data: RenderData) => (\n      <>\n        <Helmet\n          titleTemplate={`%s - ${data.site.siteMetadata.title}`}\n          defaultTitle={data.site.siteMetadata.title}\n          meta={[\n            {\n              name: 'description',\n              content: 'Demo site for a Gatsby Starter in TypeScript'\n            },\n            {\n              name: 'keywords',\n              content: 'gatsby, gatsbyjs, sample, demo, typescript'\n            }\n          ]}\n        />\n        <Header title={data.site.siteMetadata.title} />\n        <div css={SideBar}>\n          <p>\n            <Link to={`/`} activeClassName=\"active\">\n              Home\n            </Link>\n          </p>\n          <p>\n            <Link to={`/content/vocabulary`} activeClassName=\"active\">\n              Vocabulary\n            </Link>\n          </p>\n          <p>\n            <Link to={`/content/concepts`} activeClassName=\"active\">\n              Concepts\n            </Link>\n          </p>\n          <p>\n            <Link to={`/content/installation/`} activeClassName=\"active\">\n              Installation\n            </Link>\n          </p>\n          <p>\n            <Link to={`/single-page/`} activeClassName=\"active\">\n              Reference\n            </Link>\n          </p>\n          <p>\n            <Link to={`/single-page/`} activeClassName=\"active\">\n              Examples\n            </Link>\n          </p>\n          <p>\n            <Link to={`/content/changelog`} activeClassName=\"active\">\n              Changelog\n            </Link>\n          </p>\n          <p>\n            <Link to={`/single-page/`} activeClassName=\"active\">\n              Questions\n            </Link>\n          </p>\n          <p>\n            <Link to={`/single-page/`} activeClassName=\"active\">\n              Request an API Key\n            </Link>\n          </p>\n          <p>\n            <Link to={`/single-page/`} activeClassName=\"active\">\n              Legal\n            </Link>\n          </p>\n        </div>\n        <div css={Content}>{children}</div>\n      </>\n    )}\n  />\n)\n"],"sourceRoot":""}