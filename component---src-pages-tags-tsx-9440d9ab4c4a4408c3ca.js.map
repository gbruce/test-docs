{"version":3,"sources":["webpack:///./src/pages/tags.tsx","webpack:///./src/components/LunrSearch.tsx","webpack:///./src/components/Header.tsx","webpack:///./src/components/Layout.tsx"],"names":["TagsPage","props","allMdx","data","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_Layout__WEBPACK_IMPORTED_MODULE_5__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","a","title","group","map","tag","key","fieldValue","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","kebabCase","totalCount","pageQuery","styles","wrapper","name","input","list","css","item","link","footer","hidden","LunrSearch","_ref3","limit","_useState","useState","query","setQuery","_useState2","results","setResults","_useState3","isActive","setActive","ref","useOutside","core_browser_esm","type","value","onChange","event","_ref","index","store","target","window","__LUNR__","en","search","_ref2","slice","result","gatsby_browser_entry","path","Math","min","length","style","container","TitleLink","styled_base_browser_esm","Link","Header","LunrSearch_LunrSearch","Layout","children","render","react_default","Fragment","Helmet","titleTemplate","site","siteMetadata","defaultTitle","meta","content","Header_Header","_1242692094"],"mappings":"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","file":"component---src-pages-tags-tsx-9440d9ab4c4a4408c3ca.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport Helmet from 'react-helmet'\nimport { kebabCase } from 'lodash'\nimport { Layout } from '../components/Layout'\n\ninterface TagsPageProps {\n  readonly data: {\n    readonly allMdx: AllMarkdown & {\n      readonly group: readonly {\n        readonly fieldValue: string\n        readonly totalCount: number\n      }[]\n    }\n    readonly site: Site\n  }\n}\n\nconst TagsPage = (props: TagsPageProps) => {\n  const { allMdx } = props.data\n\n  return (\n    <Layout>\n      <Helmet title=\"Tags\" />\n      <div>\n        <h2>Tags</h2>\n        <ul>\n          {allMdx.group.map(tag => (\n            <li key={tag.fieldValue}>\n              <Link to={`/tags/${kebabCase(tag.fieldValue)}/`}>{tag.fieldValue}</Link> (\n              {tag.totalCount})\n            </li>\n          ))}\n        </ul>\n      </div>\n    </Layout>\n  )\n}\n\nexport default TagsPage\n\nexport const pageQuery = graphql`\n  {\n    allMdx(limit: 2000, filter: { frontmatter: { draft: { ne: true } } }) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n","import React, { useState } from 'react'\nimport { useOutside } from '@pacote/react-use-outside'\nimport { css } from '@emotion/core'\nimport { Link } from 'gatsby'\nimport lunr from 'lunr'\n\ndeclare global {\n  interface Window {\n    __LUNR__: {\n      readonly [language: string]: {\n        readonly index: lunr.Index\n        readonly store: {\n          readonly [key: string]: any\n        }\n      }\n    }\n  }\n}\n\ninterface SearchResult extends lunr.Index.Result {\n  readonly title: string\n  readonly path: string\n}\n\nconst accent = '#ff5700'\n\nconst styles = {\n  wrapper: css`\n    display: inline-block;\n  `,\n  input: css`\n    padding: 0.25rem 0.5rem;\n    width: 12rem;\n  `,\n  list: css`\n    background-color: #fff;\n    border: 1px solid ${accent};\n    display: block;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    position: absolute;\n    width: 12rem;\n    z-index: 2;\n  `,\n  item: css`\n    border-bottom: 1px dotted ${accent};\n    margin: 0;\n  `,\n  link: css`\n    display: block;\n    padding: 0.25rem 0.5rem;\n  `,\n  footer: css`\n    font-size: 0.75rem;\n    margin: 0;\n    padding: 0.5rem;\n    border: 0;\n  `,\n  hidden: css`\n    position: absolute;\n    left: -10000px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n  `\n}\n\nconst search = (query: string): readonly SearchResult[] => {\n  const { index, store } = window.__LUNR__ && window.__LUNR__.en\n  return query ? index.search(query).map(({ ref }) => store[ref]) : []\n}\n\ninterface LunrSearchProps {\n  readonly limit?: number\n}\n\nexport const LunrSearch = ({ limit }: LunrSearchProps) => {\n  const [query, setQuery] = useState('')\n  const [results, setResults] = useState<readonly SearchResult[]>([])\n  const [isActive, setActive] = useState(false)\n\n  const ref = useOutside<HTMLDivElement>('click', () => {\n    setActive(false)\n  })\n\n  return (\n    <div ref={ref} css={styles.wrapper}>\n      <label>\n        <span css={styles.hidden}>Search</span>\n        <input\n          type=\"search\"\n          css={styles.input}\n          value={query}\n          onChange={event => {\n            setQuery(event.target.value)\n            setResults(search(event.target.value))\n            setActive(true)\n          }}\n        />\n      </label>\n      {isActive ? (\n        <ul css={styles.list}>\n          {results.slice(0, limit).map((result, index) => (\n            <li key={index} css={styles.item}>\n              <Link css={styles.link} to={result.path}>\n                {result.title}\n              </Link>\n            </li>\n          ))}\n          <li css={styles.footer}>\n            Showing {limit ? `${Math.min(limit, results.length)} of` : null} {results.length}{' '}\n            {results.length === 1 ? 'result' : 'results'}.\n          </li>\n        </ul>\n      ) : null}\n    </div>\n  )\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { css } from '@emotion/core'\nimport { Link } from 'gatsby'\nimport { LunrSearch } from './LunrSearch'\n\nconst style = {\n  container: css`\n    background: #ff5700;\n    margin-bottom: 1.45rem;\n  `,\n  wrapper: css`\n    display: grid;\n    grid-template-columns: auto 10rem;\n    grid-template-rows: auto;\n    margin: 0 auto;\n    max-width: 960px;\n    padding: 1.45rem 1.0875rem;\n  `,\n  title: css`\n    margin: 0;\n    display: inline-block;\n  `\n}\n\nconst TitleLink = styled(Link)`\n  color: #fff;\n\n  &:active,\n  &:hover {\n    color: #fff;\n  }\n`\n\ninterface HeaderProps {\n  readonly title: string\n}\n\nexport const Header = ({ title }: HeaderProps) => (\n  <div css={style.container}>\n    <div css={style.wrapper}>\n      <h1 css={style.title}>\n        <TitleLink to=\"/\">{title}</TitleLink>\n      </h1>\n      <LunrSearch limit={10} />\n    </div>\n  </div>\n)\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Helmet } from 'react-helmet'\nimport { css } from '@emotion/core'\nimport { Header } from './Header'\n\nconst wrapper = css`\n  margin: 0 auto;\n  max-width: 960px;\n  padding: 0 1.0875rem 1.45rem;\n`\n\ninterface LayoutProps {\n  readonly children?: React.ReactNode | readonly React.ReactNode[]\n}\n\ninterface RenderData {\n  readonly site: {\n    readonly siteMetadata: {\n      readonly title: string\n    }\n  }\n}\n\nexport const Layout = ({ children }: LayoutProps) => (\n  <StaticQuery\n    query={graphql`\n      {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={(data: RenderData) => (\n      <>\n        <Helmet\n          titleTemplate={`%s - ${data.site.siteMetadata.title}`}\n          defaultTitle={data.site.siteMetadata.title}\n          meta={[\n            {\n              name: 'description',\n              content: 'Demo site for a Gatsby Starter in TypeScript'\n            },\n            {\n              name: 'keywords',\n              content: 'gatsby, gatsbyjs, sample, demo, typescript'\n            }\n          ]}\n        />\n        <Header title={data.site.siteMetadata.title} />\n        <div css={wrapper}>{children}</div>\n      </>\n    )}\n  />\n)\n"],"sourceRoot":""}