{"version":3,"sources":["webpack:///./src/templates/IndexTemplate.tsx","webpack:///./src/components/Header.tsx","webpack:///./src/components/Layout.tsx","webpack:///./src/components/ContentList.tsx","webpack:///./src/components/Pager.tsx"],"names":["IndexTemplate","props","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_Layout__WEBPACK_IMPORTED_MODULE_6__","react_helmet__WEBPACK_IMPORTED_MODULE_3__","meta","name","content","_components_ContentList__WEBPACK_IMPORTED_MODULE_4__","edges","pageContext","group","_components_Pager__WEBPACK_IMPORTED_MODULE_5__","page","prefix","total","pageTotal","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","style","container","styles","wrapper","title","TitleLink","styled_base_browser_esm","Link","target","Header","_ref","core_browser_esm","css","Content","SideBar","Layout","children","gatsby_browser_entry","query","render","data","react_default","a","Fragment","Helmet","titleTemplate","site","siteMetadata","defaultTitle","Header_Header","activeClassName","_1242692094","list","item","ContentList","map","_ref2","node","_node$frontmatter","frontmatter","path","key","date","pageUrl","NavLink","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","Pager","_emotion_core__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-templates-index-template-tsx-7aeee0e2471325290755.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { Helmet } from 'react-helmet'\nimport { ContentList } from '../components/ContentList'\nimport { Pager } from '../components/Pager'\nimport { Layout } from '../components/Layout'\n\ninterface IndexPageProps {\n  readonly data: {\n    readonly allMdx: AllMarkdown\n    readonly site: Site\n  }\n  readonly pageContext: {\n    readonly group: Edges<Markdown>\n    readonly prefix: string\n    readonly page: number\n    readonly pageTotal: number\n    readonly itemTotal: number\n  }\n}\n\nconst IndexTemplate = (props: IndexPageProps) => (\n  <Layout>\n    <Helmet\n      meta={[\n        { name: 'description', content: 'Sample' },\n        { name: 'keywords', content: 'sample, something' }\n      ]}\n    />\n    <h2>All Markdown Content</h2>\n    <ContentList edges={props.pageContext.group} />\n    <Pager\n      page={props.pageContext.page}\n      prefix={props.pageContext.prefix}\n      total={props.pageContext.pageTotal}\n    />\n    <hr />\n    <Link to=\"/tags\">All tags</Link>\n  </Layout>\n)\n\nexport default IndexTemplate\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { css } from '@emotion/core'\nimport { Link } from 'gatsby'\n\nconst style = {\n  container: css`\n    background: #ffffff;\n    margin-bottom: 1.45rem;\n  `,\n  wrapper: css`\n    display: grid;\n    grid-template-columns: auto 10rem;\n    grid-template-rows: auto;\n    margin: 0 auto;\n    max-width: 960px;\n    padding: 1.45rem 1.0875rem;\n  `,\n  title: css`\n    color: '#ff0000';\n    margin: 0;\n    display: inline-block;\n  `\n}\n\nconst TitleLink = styled(Link)`\n  color: #000000;\n\n  &:active,\n  &:hover {\n    color: #fff;\n  }\n`\n\ninterface HeaderProps {\n  readonly title: string\n}\n\nexport const Header = ({ title }: HeaderProps) => (\n  <div css={style.container}>\n    <div css={style.wrapper}>\n      <h1 css={style.title}>\n        <TitleLink to=\"/\">{title}</TitleLink>\n      </h1>\n    </div>\n  </div>\n)\n","import React from 'react'\nimport { StaticQuery, graphql, Link } from 'gatsby'\nimport { Helmet } from 'react-helmet'\nimport { css } from '@emotion/core'\nimport { Header } from './Header'\n\nconst Content = css`\n  margin-left: 160px; /* Same as the width of the sidebar */\n  padding: 0px 10px;\n`\nexport const SideBar = css`\n  font-family: 'sans serif';\n  font-size: 20px;\n  height: 100%;\n  width: 160px;\n  position: fixed;\n  left: 0;\n  overflow-x: hidden;\n  padding-left: 10px;\n`\ninterface LayoutProps {\n  readonly children?: React.ReactNode | readonly React.ReactNode[]\n}\n\ninterface RenderData {\n  readonly site: {\n    readonly siteMetadata: {\n      readonly title: string\n    }\n  }\n}\n\nexport const Layout = ({ children }: LayoutProps) => (\n  <StaticQuery\n    query={graphql`\n      {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={(data: RenderData) => (\n      <>\n        <Helmet\n          titleTemplate={`%s - ${data.site.siteMetadata.title}`}\n          defaultTitle={data.site.siteMetadata.title}\n          meta={[\n            {\n              name: 'description',\n              content: 'Demo site for a Gatsby Starter in TypeScript'\n            },\n            {\n              name: 'keywords',\n              content: 'gatsby, gatsbyjs, sample, demo, typescript'\n            }\n          ]}\n        />\n        <Header title={data.site.siteMetadata.title} />\n        <div css={SideBar}>\n          <p>\n            <Link to={`/single-page/`} activeClassName=\"active\">\n              Home\n            </Link>\n          </p>\n          <p>\n            <Link to={`/single-page/`} activeClassName=\"active\">\n              Vocabulary\n            </Link>\n          </p>\n          <p>\n            <Link to={`/single-page/`} activeClassName=\"active\">\n              Concepts\n            </Link>\n          </p>\n          <p>\n            <Link to={`/single-page/`} activeClassName=\"active\">\n              Installation\n            </Link>\n          </p>\n          <p>\n            <Link to={`/single-page/`} activeClassName=\"active\">\n              Reference\n            </Link>\n          </p>\n          <p>\n            <Link to={`/single-page/`} activeClassName=\"active\">\n              Examples\n            </Link>\n          </p>\n          <p>\n            <Link to={`/single-page/`} activeClassName=\"active\">\n              Questions\n            </Link>\n          </p>\n          <p>\n            <Link to={`/single-page/`} activeClassName=\"active\">\n              Request an API Key\n            </Link>\n          </p>\n          <p>\n            <Link to={`/single-page/`} activeClassName=\"active\">\n              Legal\n            </Link>\n          </p>\n        </div>\n        <div css={Content}>{children}</div>\n      </>\n    )}\n  />\n)\n","import React from 'react'\nimport { css } from '@emotion/core'\nimport { Link } from 'gatsby'\n\ninterface ContentListProps {\n  readonly edges: Edges<Markdown>\n}\n\nconst list = css`\n  line-height: 1.8;\n  list-style: none;\n  padding: 0;\n  margin: 1rem 0 2rem;\n`\n\nconst item = css``\n\nexport const ContentList = ({ edges }: ContentListProps) => (\n  <ul css={list}>\n    {edges.map(({ node }) => {\n      const { path, title } = node.frontmatter\n      return (\n        <li css={item} key={path}>\n          <Link to={path}>{title}</Link> ({node.frontmatter.date})\n        </li>\n      )\n    })}\n  </ul>\n)\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\n\ninterface PagerProps {\n  readonly prefix: string\n  readonly page: number\n  readonly total: number\n}\n\nfunction pageUrl(prefix: string, page: number): string {\n  return page <= 1 ? `/${prefix}` : `/${prefix}/${page}`\n}\n\nconst NavLink = styled(Link)`\n  background-color: #ff5700;\n  border-radius: 3px;\n  color: #fff;\n  font-family: sans-serif;\n  margin: 0 1rem 0 0;\n  padding: 0.25rem 0.5rem;\n  text-decoration: none;\n\n  &:active,\n  &:hover {\n    color: #fff;\n  }\n`\n\nexport const Pager = ({ prefix, page, total }: PagerProps) => (\n  <div>\n    {page > 1 && <NavLink to={pageUrl(prefix, page - 1)}>Previous</NavLink>}\n    {page < total && <NavLink to={pageUrl(prefix, page + 1)}>Next</NavLink>}\n  </div>\n)\n"],"sourceRoot":""}