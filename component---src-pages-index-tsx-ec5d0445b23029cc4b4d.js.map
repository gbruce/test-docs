{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./src/components/LunrSearch.tsx","webpack:///./src/components/Header.tsx","webpack:///./src/components/Layout.tsx"],"names":["IndexPage","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","LayoutIndexPage","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","styles","wrapper","name","input","list","css","item","link","footer","hidden","LunrSearch","_ref3","limit","_useState","useState","query","setQuery","_useState2","results","setResults","_useState3","isActive","setActive","ref","useOutside","core_browser_esm","type","value","onChange","event","_ref","index","store","target","window","__LUNR__","en","search","map","_ref2","slice","result","key","gatsby_browser_entry","path","title","Math","min","length","style","container","TitleLink","styled_base_browser_esm","Link","Header","LunrSearch_LunrSearch","Layout","children","render","data","react_default","Helmet","titleTemplate","site","siteMetadata","defaultTitle","meta","content","Header_Header","_1242692094"],"mappings":"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","file":"component---src-pages-index-tsx-ec5d0445b23029cc4b4d.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { Layout } from '../components/Layout'\n\nexport const IndexPage = () => (\n  <>\n    <h2>Hi people</h2>\n    <p>Welcome to your new Gatsby site.</p>\n    <p>Now go build something great.</p>\n    <p>\n      <Link to=\"/another-page/\">Go to another page</Link>\n    </p>\n    <p>\n      <Link to=\"/all/\">See content generated from Markdown files</Link>\n    </p>\n  </>\n)\n\nconst LayoutIndexPage = () => (\n  <Layout>\n    <IndexPage />\n  </Layout>\n)\n\nexport default LayoutIndexPage\n","import React, { useState } from 'react'\nimport { useOutside } from '@pacote/react-use-outside'\nimport { css } from '@emotion/core'\nimport { Link } from 'gatsby'\nimport lunr from 'lunr'\n\ndeclare global {\n  interface Window {\n    __LUNR__: {\n      readonly [language: string]: {\n        readonly index: lunr.Index\n        readonly store: {\n          readonly [key: string]: any\n        }\n      }\n    }\n  }\n}\n\ninterface SearchResult extends lunr.Index.Result {\n  readonly title: string\n  readonly path: string\n}\n\nconst accent = '#ff5700'\n\nconst styles = {\n  wrapper: css`\n    display: inline-block;\n  `,\n  input: css`\n    padding: 0.25rem 0.5rem;\n    width: 12rem;\n  `,\n  list: css`\n    background-color: #fff;\n    border: 1px solid ${accent};\n    display: block;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    position: absolute;\n    width: 12rem;\n    z-index: 2;\n  `,\n  item: css`\n    border-bottom: 1px dotted ${accent};\n    margin: 0;\n  `,\n  link: css`\n    display: block;\n    padding: 0.25rem 0.5rem;\n  `,\n  footer: css`\n    font-size: 0.75rem;\n    margin: 0;\n    padding: 0.5rem;\n    border: 0;\n  `,\n  hidden: css`\n    position: absolute;\n    left: -10000px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n  `\n}\n\nconst search = (query: string): readonly SearchResult[] => {\n  const { index, store } = window.__LUNR__ && window.__LUNR__.en\n  return query ? index.search(query).map(({ ref }) => store[ref]) : []\n}\n\ninterface LunrSearchProps {\n  readonly limit?: number\n}\n\nexport const LunrSearch = ({ limit }: LunrSearchProps) => {\n  const [query, setQuery] = useState('')\n  const [results, setResults] = useState<readonly SearchResult[]>([])\n  const [isActive, setActive] = useState(false)\n\n  const ref = useOutside<HTMLDivElement>('click', () => {\n    setActive(false)\n  })\n\n  return (\n    <div ref={ref} css={styles.wrapper}>\n      <label>\n        <span css={styles.hidden}>Search</span>\n        <input\n          type=\"search\"\n          css={styles.input}\n          value={query}\n          onChange={event => {\n            setQuery(event.target.value)\n            setResults(search(event.target.value))\n            setActive(true)\n          }}\n        />\n      </label>\n      {isActive ? (\n        <ul css={styles.list}>\n          {results.slice(0, limit).map((result, index) => (\n            <li key={index} css={styles.item}>\n              <Link css={styles.link} to={result.path}>\n                {result.title}\n              </Link>\n            </li>\n          ))}\n          <li css={styles.footer}>\n            Showing {limit ? `${Math.min(limit, results.length)} of` : null} {results.length}{' '}\n            {results.length === 1 ? 'result' : 'results'}.\n          </li>\n        </ul>\n      ) : null}\n    </div>\n  )\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { css } from '@emotion/core'\nimport { Link } from 'gatsby'\nimport { LunrSearch } from './LunrSearch'\n\nconst style = {\n  container: css`\n    background: #ff5700;\n    margin-bottom: 1.45rem;\n  `,\n  wrapper: css`\n    display: grid;\n    grid-template-columns: auto 10rem;\n    grid-template-rows: auto;\n    margin: 0 auto;\n    max-width: 960px;\n    padding: 1.45rem 1.0875rem;\n  `,\n  title: css`\n    margin: 0;\n    display: inline-block;\n  `\n}\n\nconst TitleLink = styled(Link)`\n  color: #fff;\n\n  &:active,\n  &:hover {\n    color: #fff;\n  }\n`\n\ninterface HeaderProps {\n  readonly title: string\n}\n\nexport const Header = ({ title }: HeaderProps) => (\n  <div css={style.container}>\n    <div css={style.wrapper}>\n      <h1 css={style.title}>\n        <TitleLink to=\"/\">{title}</TitleLink>\n      </h1>\n      <LunrSearch limit={10} />\n    </div>\n  </div>\n)\n","import React from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport { Helmet } from 'react-helmet'\nimport { css } from '@emotion/core'\nimport { Header } from './Header'\n\nconst wrapper = css`\n  margin: 0 auto;\n  max-width: 960px;\n  padding: 0 1.0875rem 1.45rem;\n`\n\ninterface LayoutProps {\n  readonly children?: React.ReactNode | readonly React.ReactNode[]\n}\n\ninterface RenderData {\n  readonly site: {\n    readonly siteMetadata: {\n      readonly title: string\n    }\n  }\n}\n\nexport const Layout = ({ children }: LayoutProps) => (\n  <StaticQuery\n    query={graphql`\n      {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={(data: RenderData) => (\n      <>\n        <Helmet\n          titleTemplate={`%s - ${data.site.siteMetadata.title}`}\n          defaultTitle={data.site.siteMetadata.title}\n          meta={[\n            {\n              name: 'description',\n              content: 'Demo site for a Gatsby Starter in TypeScript'\n            },\n            {\n              name: 'keywords',\n              content: 'gatsby, gatsbyjs, sample, demo, typescript'\n            }\n          ]}\n        />\n        <Header title={data.site.siteMetadata.title} />\n        <div css={wrapper}>{children}</div>\n      </>\n    )}\n  />\n)\n"],"sourceRoot":""}