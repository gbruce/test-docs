{"version":3,"sources":["webpack:///./src/templates/TagTemplate.tsx","webpack:///./src/components/Header.tsx","webpack:///./src/components/Layout.tsx","webpack:///./src/components/ContentList.tsx","webpack:///./src/components/Pager.tsx"],"names":["TagTemplate","props","_props$pageContext","pageContext","group","page","prefix","pageTotal","tag","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_Layout__WEBPACK_IMPORTED_MODULE_6__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","a","title","_components_ContentList__WEBPACK_IMPORTED_MODULE_4__","edges","_components_Pager__WEBPACK_IMPORTED_MODULE_5__","total","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","style","container","name","styles","wrapper","TitleLink","styled_base_browser_esm","Link","target","Header","_ref","core_browser_esm","css","Content","SideBar","Layout","children","gatsby_browser_entry","query","render","data","react_default","Fragment","Helmet","titleTemplate","site","siteMetadata","defaultTitle","meta","content","Header_Header","activeClassName","_1242692094","list","item","ContentList","map","_ref2","node","_node$frontmatter","frontmatter","path","key","date","pageUrl","NavLink","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","Pager","_emotion_core__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-templates-tag-template-tsx-003a2608dbe68c975add.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport Helmet from 'react-helmet'\nimport { ContentList } from '../components/ContentList'\nimport { Pager } from '../components/Pager'\nimport { Layout } from '../components/Layout'\n\ninterface TagTemplateProps {\n  readonly pageContext: {\n    readonly tag?: string\n    readonly slug?: string\n    readonly group: Edges<Markdown>\n    readonly prefix: string\n    readonly page: number\n    readonly pageTotal: number\n    readonly itemTotal: number\n  }\n  readonly data: {\n    readonly allMdx: AllMarkdown\n    readonly site: Site\n  }\n}\n\nconst TagTemplate = (props: TagTemplateProps) => {\n  const { group, page, prefix, pageTotal, tag } = props.pageContext\n\n  return (\n    <Layout>\n      <Helmet title={`Content Tagged \"${tag}\"`} />\n      <h2>{`Content tagged with \"${tag}\"`}</h2>\n      <ContentList edges={group} />\n      <Pager page={page} prefix={prefix} total={pageTotal} />\n      <hr />\n      <Link to=\"/tags\">All tags</Link>\n    </Layout>\n  )\n}\n\nexport default TagTemplate\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { css } from '@emotion/core'\nimport { Link } from 'gatsby'\n\nconst style = {\n  container: css`\n    background: #ffffff;\n    margin-bottom: 1.45rem;\n  `,\n  wrapper: css`\n    display: grid;\n    grid-template-columns: auto 10rem;\n    grid-template-rows: auto;\n    margin: 0 auto;\n    max-width: 960px;\n    padding: 1.45rem 1.0875rem;\n  `,\n  title: css`\n    color: '#ff0000';\n    margin: 0;\n    display: inline-block;\n  `\n}\n\nconst TitleLink = styled(Link)`\n  color: #000000;\n\n  &:active,\n  &:hover {\n    color: #fff;\n  }\n`\n\ninterface HeaderProps {\n  readonly title: string\n}\n\nexport const Header = ({ title }: HeaderProps) => (\n  <div css={style.container}>\n    <div css={style.wrapper}>\n      <h1 css={style.title}>\n        <TitleLink to=\"/\">{title}</TitleLink>\n      </h1>\n    </div>\n  </div>\n)\n","import React from 'react'\nimport { StaticQuery, graphql, Link } from 'gatsby'\nimport { Helmet } from 'react-helmet'\nimport { css } from '@emotion/core'\nimport { Header } from './Header'\n\nconst Content = css`\n  margin-left: 160px; /* Same as the width of the sidebar */\n  padding: 0px 10px;\n`\nexport const SideBar = css`\n  font-family: 'sans serif';\n  font-size: 20px;\n  height: 100%;\n  width: 160px;\n  position: fixed;\n  left: 0;\n  overflow-x: hidden;\n  padding-left: 10px;\n`\ninterface LayoutProps {\n  readonly children?: React.ReactNode | readonly React.ReactNode[]\n}\n\ninterface RenderData {\n  readonly site: {\n    readonly siteMetadata: {\n      readonly title: string\n    }\n  }\n}\n\nexport const Layout = ({ children }: LayoutProps) => (\n  <StaticQuery\n    query={graphql`\n      {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={(data: RenderData) => (\n      <>\n        <Helmet\n          titleTemplate={`%s - ${data.site.siteMetadata.title}`}\n          defaultTitle={data.site.siteMetadata.title}\n          meta={[\n            {\n              name: 'description',\n              content: 'Demo site for a Gatsby Starter in TypeScript'\n            },\n            {\n              name: 'keywords',\n              content: 'gatsby, gatsbyjs, sample, demo, typescript'\n            }\n          ]}\n        />\n        <Header title={data.site.siteMetadata.title} />\n        <div css={SideBar}>\n          <p>\n            <Link to={`/single-page/`} activeClassName=\"active\">\n              Home\n            </Link>\n          </p>\n          <p>\n            <Link to={`/single-page/`} activeClassName=\"active\">\n              Vocabulary\n            </Link>\n          </p>\n          <p>\n            <Link to={`/single-page/`} activeClassName=\"active\">\n              Concepts\n            </Link>\n          </p>\n          <p>\n            <Link to={`/single-page/`} activeClassName=\"active\">\n              Installation\n            </Link>\n          </p>\n          <p>\n            <Link to={`/single-page/`} activeClassName=\"active\">\n              Reference\n            </Link>\n          </p>\n          <p>\n            <Link to={`/single-page/`} activeClassName=\"active\">\n              Examples\n            </Link>\n          </p>\n          <p>\n            <Link to={`/single-page/`} activeClassName=\"active\">\n              Questions\n            </Link>\n          </p>\n          <p>\n            <Link to={`/single-page/`} activeClassName=\"active\">\n              Request an API Key\n            </Link>\n          </p>\n          <p>\n            <Link to={`/single-page/`} activeClassName=\"active\">\n              Legal\n            </Link>\n          </p>\n        </div>\n        <div css={Content}>{children}</div>\n      </>\n    )}\n  />\n)\n","import React from 'react'\nimport { css } from '@emotion/core'\nimport { Link } from 'gatsby'\n\ninterface ContentListProps {\n  readonly edges: Edges<Markdown>\n}\n\nconst list = css`\n  line-height: 1.8;\n  list-style: none;\n  padding: 0;\n  margin: 1rem 0 2rem;\n`\n\nconst item = css``\n\nexport const ContentList = ({ edges }: ContentListProps) => (\n  <ul css={list}>\n    {edges.map(({ node }) => {\n      const { path, title } = node.frontmatter\n      return (\n        <li css={item} key={path}>\n          <Link to={path}>{title}</Link> ({node.frontmatter.date})\n        </li>\n      )\n    })}\n  </ul>\n)\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\n\ninterface PagerProps {\n  readonly prefix: string\n  readonly page: number\n  readonly total: number\n}\n\nfunction pageUrl(prefix: string, page: number): string {\n  return page <= 1 ? `/${prefix}` : `/${prefix}/${page}`\n}\n\nconst NavLink = styled(Link)`\n  background-color: #ff5700;\n  border-radius: 3px;\n  color: #fff;\n  font-family: sans-serif;\n  margin: 0 1rem 0 0;\n  padding: 0.25rem 0.5rem;\n  text-decoration: none;\n\n  &:active,\n  &:hover {\n    color: #fff;\n  }\n`\n\nexport const Pager = ({ prefix, page, total }: PagerProps) => (\n  <div>\n    {page > 1 && <NavLink to={pageUrl(prefix, page - 1)}>Previous</NavLink>}\n    {page < total && <NavLink to={pageUrl(prefix, page + 1)}>Next</NavLink>}\n  </div>\n)\n"],"sourceRoot":""}