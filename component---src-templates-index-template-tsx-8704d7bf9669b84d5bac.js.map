{"version":3,"sources":["webpack:///./src/templates/IndexTemplate.tsx","webpack:///./src/components/LunrSearch.tsx","webpack:///./src/components/Header.tsx","webpack:///./src/components/Layout.tsx","webpack:///./src/components/ContentList.tsx","webpack:///./src/components/Pager.tsx"],"names":["IndexTemplate","props","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_Layout__WEBPACK_IMPORTED_MODULE_6__","react_helmet__WEBPACK_IMPORTED_MODULE_3__","meta","name","content","_components_ContentList__WEBPACK_IMPORTED_MODULE_4__","edges","pageContext","group","_components_Pager__WEBPACK_IMPORTED_MODULE_5__","page","prefix","total","pageTotal","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","styles","wrapper","input","list","css","item","link","footer","hidden","LunrSearch","_ref3","limit","_useState","useState","query","setQuery","_useState2","results","setResults","_useState3","isActive","setActive","ref","useOutside","core_browser_esm","type","value","onChange","event","_ref","index","store","target","window","__LUNR__","en","search","map","_ref2","slice","result","key","gatsby_browser_entry","path","title","Math","min","length","style","container","TitleLink","styled_base_browser_esm","Link","Header","LunrSearch_LunrSearch","Layout","children","render","data","react_default","a","Fragment","Helmet","titleTemplate","site","siteMetadata","defaultTitle","Header_Header","className","id","activeClassName","_1242692094","ContentList","node","_node$frontmatter","frontmatter","date","pageUrl","NavLink","_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__","Pager","_emotion_core__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"gKAyCeA,UApBO,SAACC,GAAD,OACpBC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACEF,OAAAC,EAAA,EAAAD,CAACG,EAAA,OAAD,CACEC,KAAM,CACJ,CAAEC,KAAM,cAAeC,QAAS,UAChC,CAAED,KAAM,WAAYC,QAAS,wBAGjCN,OAAAC,EAAA,EAAAD,CAAA,kCACAA,OAAAC,EAAA,EAAAD,CAACO,EAAA,EAAD,CAAaC,MAAOT,EAAMU,YAAYC,QACtCV,OAAAC,EAAA,EAAAD,CAACW,EAAA,EAAD,CACEC,KAAMb,EAAMU,YAAYG,KACxBC,OAAQd,EAAMU,YAAYI,OAC1BC,MAAOf,EAAMU,YAAYM,YAE3Bf,OAAAC,EAAA,EAAAD,CAAA,WACAA,OAAAC,EAAA,EAAAD,CAACgB,EAAA,KAAD,CAAMC,GAAG,SAAT,kOCXEC,EAAS,CACbC,QAAO,CAAAd,KAAA,UAAAa,OAAA,yBAGPE,MAAK,CAAAf,KAAA,SAAAa,OAAA,uCAILG,KAAMC,YAAF,0CAVS,UAUT,8FAWJC,KAAMD,YAAF,4BArBS,UAqBT,cAIJE,KAAI,CAAAnB,KAAA,UAAAa,OAAA,yCAIJO,OAAM,CAAApB,KAAA,UAAAa,OAAA,uDAMNQ,OAAM,CAAArB,KAAA,SAAAa,OAAA,mFAmBKS,EAAa,SAAAC,GAAgC,IAA7BC,EAA6BD,EAA7BC,MAA6BC,EAC9BC,mBAAS,IAA5BC,EADiDF,EAAA,GAC1CG,EAD0CH,EAAA,GAAAI,EAE1BH,mBAAkC,IAAzDI,EAFiDD,EAAA,GAExCE,EAFwCF,EAAA,GAAAG,EAG1BN,oBAAS,GAAhCO,EAHiDD,EAAA,GAGvCE,EAHuCF,EAAA,GAKlDG,EAAMC,qBAA2B,QAAS,WAC9CF,GAAU,KAGZ,OACEvC,OAAA0C,EAAA,EAAA1C,CAAA,OAAKwC,IAAKA,EAAKlB,IAAKJ,EAAOC,SACzBnB,OAAA0C,EAAA,EAAA1C,CAAA,aACEA,OAAA0C,EAAA,EAAA1C,CAAA,QAAMsB,IAAKJ,EAAOQ,QAAlB,UACA1B,OAAA0C,EAAA,EAAA1C,CAAA,SACE2C,KAAK,SACLrB,IAAKJ,EAAOE,MACZwB,MAAOZ,EACPa,SAAU,SAAAC,GA1BL,IAACd,EAA2Ce,EACjDC,EAAOC,EA0BLhB,EAASa,EAAMI,OAAON,OACtBR,GA5BIJ,EA4Bcc,EAAMI,OAAON,MA5BgBG,EAChCI,OAAOC,UAAYD,OAAOC,SAASC,GAApDL,EADiDD,EACjDC,MAAOC,EAD0CF,EAC1CE,MACRjB,EAAQgB,EAAMM,OAAOtB,GAAOuB,IAAI,SAAAC,GAAA,IAAGhB,EAAHgB,EAAGhB,IAAH,OAAaS,EAAMT,KAAQ,KA2BxDD,GAAU,OAIfD,EACCtC,OAAA0C,EAAA,EAAA1C,CAAA,MAAIsB,IAAKJ,EAAOG,MACbc,EAAQsB,MAAM,EAAG5B,GAAO0B,IAAI,SAACG,EAAQV,GAAT,OAC3BhD,OAAA0C,EAAA,EAAA1C,CAAA,MAAI2D,IAAKX,EAAO1B,IAAKJ,EAAOK,MAC1BvB,OAAA0C,EAAA,EAAA1C,CAAC4D,EAAA,KAAD,CAAMtC,IAAKJ,EAAOM,KAAMP,GAAIyC,EAAOG,MAChCH,EAAOI,UAId9D,OAAA0C,EAAA,EAAA1C,CAAA,MAAIsB,IAAKJ,EAAOO,QAAhB,WACWI,EAAWkC,KAAKC,IAAInC,EAAOM,EAAQ8B,QAA9B,MAA6C,KAD7D,IACoE9B,EAAQ8B,OAAQ,IAC9D,IAAnB9B,EAAQ8B,OAAe,SAAW,UAFrC,MAKA,OC9GJC,EAAQ,CACZC,UAAS,CAAA9D,KAAA,UAAAa,OAAA,6CAITC,QAAO,CAAAd,KAAA,SAAAa,OAAA,kIAQP4C,MAAK,CAAAzD,KAAA,UAAAa,OAAA,mCAMDkD,EAAYpE,OAAAqE,EAAA,EAAArE,CAAOsE,OAAP,CAAApB,OAAA,aAAAlD,CAAH,CAAAK,KAAA,UAAAa,OAAA,6CAaFqD,EAAS,SAAAxB,GAAA,IAAGe,EAAHf,EAAGe,MAAH,OACpB9D,OAAA0C,EAAA,EAAA1C,CAAA,OAAKsB,IAAK4C,EAAMC,WACdnE,OAAA0C,EAAA,EAAA1C,CAAA,OAAKsB,IAAK4C,EAAM/C,SACdnB,OAAA0C,EAAA,EAAA1C,CAAA,MAAIsB,IAAK4C,EAAMJ,OACb9D,OAAA0C,EAAA,EAAA1C,CAACoE,EAAD,CAAWnD,GAAG,KAAK6C,IAErB9D,OAAA0C,EAAA,EAAA1C,CAACwE,EAAD,CAAY3C,MAAO,wCCtCzB,IAAMV,EAAO,CAAAd,KAAA,UAAAa,OAAA,8DAkBAuD,EAAS,SAAA1B,GAAA,IAAG2B,EAAH3B,EAAG2B,SAAH,OACpB1E,OAAA0C,EAAA,EAAA1C,CAAC4D,EAAA,YAAD,CACE5B,MAAK,aASL2C,OAAQ,SAACC,GAAD,OACN5E,OAAA0C,EAAA,EAAA1C,CAAA6E,EAAAC,EAAAC,SAAA,KACE/E,OAAA0C,EAAA,EAAA1C,CAACgF,EAAA,OAAD,CACEC,cAAa,QAAUL,EAAKM,KAAKC,aAAarB,MAC9CsB,aAAcR,EAAKM,KAAKC,aAAarB,MACrC1D,KAAM,CACJ,CACEC,KAAM,cACNC,QAAS,gDAEX,CACED,KAAM,WACNC,QAAS,iDAIfN,OAAA0C,EAAA,EAAA1C,CAACqF,EAAD,CAAQvB,MAAOc,EAAKM,KAAKC,aAAarB,QACtC9D,OAAA0C,EAAA,EAAA1C,CAAA,WACEA,OAAA0C,EAAA,EAAA1C,CAAA,OAAKsF,UAAU,2DAA2DC,GAAG,WAC3EvF,OAAA0C,EAAA,EAAA1C,CAAA,SACEA,OAAA0C,EAAA,EAAA1C,CAAC4D,EAAA,KAAD,CAAM3C,GAAE,gBAAmBuE,gBAAgB,UAA3C,SAIFxF,OAAA0C,EAAA,EAAA1C,CAAA,SACEA,OAAA0C,EAAA,EAAA1C,CAAC4D,EAAA,KAAD,CAAM3C,GAAE,gBAAmBuE,gBAAgB,UAA3C,eAIFxF,OAAA0C,EAAA,EAAA1C,CAAA,SACEA,OAAA0C,EAAA,EAAA1C,CAAC4D,EAAA,KAAD,CAAM3C,GAAE,gBAAmBuE,gBAAgB,UAA3C,aAIFxF,OAAA0C,EAAA,EAAA1C,CAAA,SACEA,OAAA0C,EAAA,EAAA1C,CAAC4D,EAAA,KAAD,CAAM3C,GAAE,gBAAmBuE,gBAAgB,UAA3C,aAIFxF,OAAA0C,EAAA,EAAA1C,CAAC4D,EAAA,KAAD,CAAM3C,GAAE,gBAAmBuE,gBAAgB,UAA3C,YAGAxF,OAAA0C,EAAA,EAAA1C,CAAC4D,EAAA,KAAD,CAAM3C,GAAE,gBAAmBuE,gBAAgB,UAA3C,cAKJxF,OAAA0C,EAAA,EAAA1C,CAAA,OAAKsB,IAAKH,GAAUuD,KAzD1BE,KAAAa,kGCjBIpE,EAAI,CAAAhB,KAAA,SAAAa,OAAA,iEAOJK,EAAOD,cAEAoE,EAAc,SAAA3C,GAAA,IAAGvC,EAAHuC,EAAGvC,MAAH,OACzBR,OAAAC,EAAA,EAAAD,CAAA,MAAIsB,IAAKD,GACNb,EAAM+C,IAAI,SAAAC,GAAc,IAAXmC,EAAWnC,EAAXmC,KAAWC,EACCD,EAAKE,YAArBhC,EADe+B,EACf/B,KAAMC,EADS8B,EACT9B,MACd,OACE9D,OAAAC,EAAA,EAAAD,CAAA,MAAIsB,IAAKC,EAAMoC,IAAKE,GAClB7D,OAAAC,EAAA,EAAAD,CAACgB,EAAA,KAAD,CAAMC,GAAI4C,GAAOC,GADnB,KACmC6B,EAAKE,YAAYC,KADpD,8GCZR,SAASC,EAAQlF,EAAgBD,GAC/B,OAAOA,GAAQ,EAAR,IAAgBC,EAAhB,IAA+BA,EAA/B,IAAyCD,EAGlD,IAAMoF,EAAUhG,OAAAiG,EAAA,EAAAjG,CAAOsE,OAAP,CAAApB,OAAA,aAAAlD,CAAH,CAAAK,KAAA,UAAAa,OAAA,6KAeAgF,EAAQ,SAAAnD,GAAA,IAAGlC,EAAHkC,EAAGlC,OAAQD,EAAXmC,EAAWnC,KAAME,EAAjBiC,EAAiBjC,MAAjB,OACnBd,OAAAmG,EAAA,EAAAnG,CAAA,WACGY,EAAO,GAAKZ,OAAAmG,EAAA,EAAAnG,CAACgG,EAAD,CAAS/E,GAAI8E,EAAQlF,EAAQD,EAAO,IAApC,YACZA,EAAOE,GAASd,OAAAmG,EAAA,EAAAnG,CAACgG,EAAD,CAAS/E,GAAI8E,EAAQlF,EAAQD,EAAO,IAApC","file":"component---src-templates-index-template-tsx-8704d7bf9669b84d5bac.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { Helmet } from 'react-helmet'\nimport { ContentList } from '../components/ContentList'\nimport { Pager } from '../components/Pager'\nimport { Layout } from '../components/Layout'\n\ninterface IndexPageProps {\n  readonly data: {\n    readonly allMdx: AllMarkdown\n    readonly site: Site\n  }\n  readonly pageContext: {\n    readonly group: Edges<Markdown>\n    readonly prefix: string\n    readonly page: number\n    readonly pageTotal: number\n    readonly itemTotal: number\n  }\n}\n\nconst IndexTemplate = (props: IndexPageProps) => (\n  <Layout>\n    <Helmet\n      meta={[\n        { name: 'description', content: 'Sample' },\n        { name: 'keywords', content: 'sample, something' }\n      ]}\n    />\n    <h2>All Markdown Content</h2>\n    <ContentList edges={props.pageContext.group} />\n    <Pager\n      page={props.pageContext.page}\n      prefix={props.pageContext.prefix}\n      total={props.pageContext.pageTotal}\n    />\n    <hr />\n    <Link to=\"/tags\">All tags</Link>\n  </Layout>\n)\n\nexport default IndexTemplate\n","import React, { useState } from 'react'\nimport { useOutside } from '@pacote/react-use-outside'\nimport { css } from '@emotion/core'\nimport { Link } from 'gatsby'\nimport lunr from 'lunr'\n\ndeclare global {\n  interface Window {\n    __LUNR__: {\n      readonly [language: string]: {\n        readonly index: lunr.Index\n        readonly store: {\n          readonly [key: string]: any\n        }\n      }\n    }\n  }\n}\n\ninterface SearchResult extends lunr.Index.Result {\n  readonly title: string\n  readonly path: string\n}\n\nconst accent = '#ff5700'\n\nconst styles = {\n  wrapper: css`\n    display: inline-block;\n  `,\n  input: css`\n    padding: 0.25rem 0.5rem;\n    width: 12rem;\n  `,\n  list: css`\n    background-color: #fff;\n    border: 1px solid ${accent};\n    display: block;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    position: absolute;\n    width: 12rem;\n    z-index: 2;\n  `,\n  item: css`\n    border-bottom: 1px dotted ${accent};\n    margin: 0;\n  `,\n  link: css`\n    display: block;\n    padding: 0.25rem 0.5rem;\n  `,\n  footer: css`\n    font-size: 0.75rem;\n    margin: 0;\n    padding: 0.5rem;\n    border: 0;\n  `,\n  hidden: css`\n    position: absolute;\n    left: -10000px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n  `\n}\n\nconst search = (query: string): readonly SearchResult[] => {\n  const { index, store } = window.__LUNR__ && window.__LUNR__.en\n  return query ? index.search(query).map(({ ref }) => store[ref]) : []\n}\n\ninterface LunrSearchProps {\n  readonly limit?: number\n}\n\nexport const LunrSearch = ({ limit }: LunrSearchProps) => {\n  const [query, setQuery] = useState('')\n  const [results, setResults] = useState<readonly SearchResult[]>([])\n  const [isActive, setActive] = useState(false)\n\n  const ref = useOutside<HTMLDivElement>('click', () => {\n    setActive(false)\n  })\n\n  return (\n    <div ref={ref} css={styles.wrapper}>\n      <label>\n        <span css={styles.hidden}>Search</span>\n        <input\n          type=\"search\"\n          css={styles.input}\n          value={query}\n          onChange={event => {\n            setQuery(event.target.value)\n            setResults(search(event.target.value))\n            setActive(true)\n          }}\n        />\n      </label>\n      {isActive ? (\n        <ul css={styles.list}>\n          {results.slice(0, limit).map((result, index) => (\n            <li key={index} css={styles.item}>\n              <Link css={styles.link} to={result.path}>\n                {result.title}\n              </Link>\n            </li>\n          ))}\n          <li css={styles.footer}>\n            Showing {limit ? `${Math.min(limit, results.length)} of` : null} {results.length}{' '}\n            {results.length === 1 ? 'result' : 'results'}.\n          </li>\n        </ul>\n      ) : null}\n    </div>\n  )\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { css } from '@emotion/core'\nimport { Link } from 'gatsby'\nimport { LunrSearch } from './LunrSearch'\n\nconst style = {\n  container: css`\n    background: #ff5700;\n    margin-bottom: 1.45rem;\n  `,\n  wrapper: css`\n    display: grid;\n    grid-template-columns: auto 10rem;\n    grid-template-rows: auto;\n    margin: 0 auto;\n    max-width: 960px;\n    padding: 1.45rem 1.0875rem;\n  `,\n  title: css`\n    margin: 0;\n    display: inline-block;\n  `\n}\n\nconst TitleLink = styled(Link)`\n  color: #fff;\n\n  &:active,\n  &:hover {\n    color: #fff;\n  }\n`\n\ninterface HeaderProps {\n  readonly title: string\n}\n\nexport const Header = ({ title }: HeaderProps) => (\n  <div css={style.container}>\n    <div css={style.wrapper}>\n      <h1 css={style.title}>\n        <TitleLink to=\"/\">{title}</TitleLink>\n      </h1>\n      <LunrSearch limit={10} />\n    </div>\n  </div>\n)\n","import React from 'react'\nimport { StaticQuery, graphql, Link } from 'gatsby'\nimport { Helmet } from 'react-helmet'\nimport { css } from '@emotion/core'\nimport { Header } from './Header'\n\nconst wrapper = css`\n  margin: 0 auto;\n  max-width: 960px;\n  padding: 0 1.0875rem 1.45rem;\n`\n\ninterface LayoutProps {\n  readonly children?: React.ReactNode | readonly React.ReactNode[]\n}\n\ninterface RenderData {\n  readonly site: {\n    readonly siteMetadata: {\n      readonly title: string\n    }\n  }\n}\n\nexport const Layout = ({ children }: LayoutProps) => (\n  <StaticQuery\n    query={graphql`\n      {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={(data: RenderData) => (\n      <>\n        <Helmet\n          titleTemplate={`%s - ${data.site.siteMetadata.title}`}\n          defaultTitle={data.site.siteMetadata.title}\n          meta={[\n            {\n              name: 'description',\n              content: 'Demo site for a Gatsby Starter in TypeScript'\n            },\n            {\n              name: 'keywords',\n              content: 'gatsby, gatsbyjs, sample, demo, typescript'\n            }\n          ]}\n        />\n        <Header title={data.site.siteMetadata.title} />\n        <div>\n          <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary fixed-top\" id=\"sideNav\">\n            <p>\n              <Link to={`/single-page/`} activeClassName=\"active\">\n                Home\n              </Link>\n            </p>\n            <p>\n              <Link to={`/single-page/`} activeClassName=\"active\">\n                Vocabulary\n              </Link>\n            </p>\n            <p>\n              <Link to={`/single-page/`} activeClassName=\"active\">\n                Concepts\n              </Link>\n            </p>\n            <p>\n              <Link to={`/single-page/`} activeClassName=\"active\">\n                Concepts\n              </Link>\n            </p>\n            <Link to={`/single-page/`} activeClassName=\"active\">\n              Concepts\n            </Link>\n            <Link to={`/single-page/`} activeClassName=\"active\">\n              Concepts\n            </Link>\n          </nav>\n        </div>\n        <div css={wrapper}>{children}</div>\n      </>\n    )}\n  />\n)\n","import React from 'react'\nimport { css } from '@emotion/core'\nimport { Link } from 'gatsby'\n\ninterface ContentListProps {\n  readonly edges: Edges<Markdown>\n}\n\nconst list = css`\n  line-height: 1.8;\n  list-style: none;\n  padding: 0;\n  margin: 1rem 0 2rem;\n`\n\nconst item = css``\n\nexport const ContentList = ({ edges }: ContentListProps) => (\n  <ul css={list}>\n    {edges.map(({ node }) => {\n      const { path, title } = node.frontmatter\n      return (\n        <li css={item} key={path}>\n          <Link to={path}>{title}</Link> ({node.frontmatter.date})\n        </li>\n      )\n    })}\n  </ul>\n)\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\n\ninterface PagerProps {\n  readonly prefix: string\n  readonly page: number\n  readonly total: number\n}\n\nfunction pageUrl(prefix: string, page: number): string {\n  return page <= 1 ? `/${prefix}` : `/${prefix}/${page}`\n}\n\nconst NavLink = styled(Link)`\n  background-color: #ff5700;\n  border-radius: 3px;\n  color: #fff;\n  font-family: sans-serif;\n  margin: 0 1rem 0 0;\n  padding: 0.25rem 0.5rem;\n  text-decoration: none;\n\n  &:active,\n  &:hover {\n    color: #fff;\n  }\n`\n\nexport const Pager = ({ prefix, page, total }: PagerProps) => (\n  <div>\n    {page > 1 && <NavLink to={pageUrl(prefix, page - 1)}>Previous</NavLink>}\n    {page < total && <NavLink to={pageUrl(prefix, page + 1)}>Next</NavLink>}\n  </div>\n)\n"],"sourceRoot":""}